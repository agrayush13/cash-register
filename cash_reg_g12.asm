#make_bin#

#LOAD_SEGMENT=FFFFh#
#LOAD_OFFSET=0000h#

#CS=0000h#
#IP=0000h#

#DS=0000h#
#ES=0000h#

#SS=0000h#
#SP=FFFEh#

#AX=0000h#
#BX=0000h#
#CX=0000h#	
#DX=0000h#
#SI=0000h#
#DI=0000h#
#BP=0000h#
; this header has to remain
; add your code here
         jmp     st1 
;proteus allows you to change the reset address - hence changing it to 00000H - so every time 
;system is reset it will go and execute the instruction at address 00000H - which is jmp st1
         db     509 dup(0)
;jmp st1 will take up 3 bytes in memory - another 509 bytes are filled with '0s'
;509 + 3 bytes = 512 bytes
;first 1 k of memory is IVT - 00000 -00002H will now have the jmp instruction. 00003H - 001FFH will
;have 00000 - as vector number 0 to 79H are unused
;IVT entry for 80H - address for entry is 80H x 4 is 00200H       
         ;dw     t_isr
; Inst Pointer Value 2 bytes
         dw     0000
;CS is 2 bytes
         db     508 dup(0)
;508 bytes filled with zeros for interrupt vectors 81H to FFH - that are not used.

st1:

;variables to keep track of port data
	PORTA_VAL DB 0
    PORTB_VAL DB 0
    PORTC_VAL DB 0
 
    
;port addresses  
	; KEYBOARD
	PORTA_ADDR	EQU	00h
	PORTB_ADDR	EQU	02h
	PORTC_ADDR	EQU	04h
	CTRL_ADDR	EQU	06h    ;PORT FOR IO CONTROL
	
	;LCD
	PORTA EQU 08H 	;PORTA IS CONNECTED TO THE D7-D0
	PORTB EQU 0AH 	;PORTB0 IS RW, PORTB1 IS RS, PORTB2 IS EN
	PORTC EQU 0CH
	PCW   EQU 0EH	;PORT FOR IO CONTROL
	
	; 8253
	;COUNT0	EQU 10H
	;COUNT1  EQU 12H
	;COUNT2  EQU 14H
	;CREG	EQU 16H
	
	
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;FROM CASH REGISTER


; KEYPAD LOOKUP TABLE
KEYPAD_TABLE	DW	3DEh, 3DDh, 3DBh, 3D7h, 3CFh, 3BEh, 3BDh, 3BBh, 3B7h, 3AFh, 37Eh, 37Dh, 37Bh, 377h, 36Fh, 2FEh, 2FDh, 2FBh, 2F7h, 2EFh, 1FEh, 1FDh, 1FBh, 1F7h, 1EFh
KEYPAD_TABLE_LENGTH	EQU	25

; KEYPAD INTERFACE OUTPUT
KEYPRESSED	DB	?
DELAY20MSCOUNT	EQU	7D00h

; KEY IDs
KEYID_Y		EQU 	10
KEYID_N		EQU	11
KEYID_ENTER	EQU	12
KEYID_BACKSPACE	EQU	13
KEYID_CANCEL	EQU	14
KEYID_ITEMNO	EQU	15
KEYID_QUANTITY	EQU	16
KEYID_TOTAL	EQU	17
KEYID_MODE	EQU	18
KEYID_TRANS	EQU	19
KEYID_PROGRAM	EQU	20
KEYID_ADDITEM	EQU	21
KEYID_DELITEM	EQU	22
KEYID_COST	EQU	23

; TRANSACTION MODE
ITEMCODE_DIG1	DB	?
ITEMCODE_DIG2	DB	?
QUANTITY_NUM	DB	?
TRANS_TOTAL	DW	0

; PROGRAM MODE
PROG_ITEMCODE_DIG1	DB	?
PROG_ITEMCODE_DIG2	DB	?
PROG_ITEMCODE       Db  ?
PROG_ITEMPRICE	DB	0
PROG_RECLENGTH	DB	0
TEMP  DB 0
TEMP1 DB 0
temp2 db 0
TEMP3 DB 0
P1 DB 0 
 RES  DB 10 DUP ('$')

; DATABASE
ITEMCODE	DB	50 DUP(0)
ITEMPRICE	DB	100 DUP(0)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	
	
STACK1		DW	100 DUP(0)
TOP_STACK1	LABEL	WORD



;code starts
	LEA	SP, TOP_STACK1
	mov       ax,0200h
    mov       ds,ax
    mov       es,ax
    mov       ss,ax
    mov       sp,0FFFEH
	
	MOV DX,PCW
    MOV AL,10000000B   ;to make all ports output
    OUT DX,AL 
	
	
	; CHECK IF LOCK IS OPEN. IF YES, PRINT "SYSTEM READY"
	
	
 X_CHECKLOCK:	
		 IN AL, PORTC
		 cmp AL,01h							; CHECK IF HIGH OR NOT
		 JZ	lock_now_opened
		 JNZ	X_CHECKkey_a							; IF LOW, LOCK IS CLOSED
 X_CHECKkey_a:	;check if some key open or not
		 IN	AL, 00h
		 MOV	BL, AL
		 IN	AL, 02h
		 MOV	CL,AL
		 IN	AL, 04h
		
		 CMP	AL, 0FFh
		 JNZ	X_KEYPRESSED_TRUE
 X_KEYPRESSED_CHECKB:	
		 CMP	BL, 0FFh
		 JNZ	X_KEYPRESSED_TRUE
		 CMP	CL, 0FFh
		 JNZ	X_KEYPRESSED_TRUE
		 JZ	X_CHECKLOCK
		
 X_KEYPRESSED_TRUE:	
		 CALL TIME
		 jmp X_CHECKLOCK

 lock_now_opened:
	
	
	CALL LCD_INIT	
	;MOV AL,1H		;debug marker
	;CALL OUT_C	
	
	
	
	MOV DL,1
	MOV DH,1
	CALL LCD_SET_CUR
	;MOV AL,2H		;debug marker
	;CALL OUT_C
	
	
	;print SYSTEM READY
	MOV AH,'S'
	CALL LCD_WRITE_CHAR
	MOV AH,'Y'
	CALL LCD_WRITE_CHAR
	MOV AH,'S'
	CALL LCD_WRITE_CHAR
	MOV AH,'T'
	CALL LCD_WRITE_CHAR	
	MOV AH,'E'
	CALL LCD_WRITE_CHAR
	MOV AH,'M'
	CALL LCD_WRITE_CHAR
	MOV AH,' '
	CALL LCD_WRITE_CHAR
	MOV AH,'R'
	CALL LCD_WRITE_CHAR
	MOV AH,'E'
	CALL LCD_WRITE_CHAR	
	MOV AH,'A'
	CALL LCD_WRITE_CHAR
	MOV AH,'D'
	CALL LCD_WRITE_CHAR
	MOV AH,'Y'
	CALL LCD_WRITE_CHAR
	
	;MOV CX,60000
	;CALL DELAY
	; GET KEY. IF KEY = MODE, THEN PRINT "SELECT MODE". ELSE, GET KEY AGAIN
press_key:  
	mov al,	9Bh
	out 06h,al
	in al,04h
	cmp al,11111011b
	jnz press_key
;print SELECT MODE
X_PRESSMODE2: 
    MOV TEMP1,00

	CALL LCD_CLEAR
	
	MOV DL,1
	MOV DH,1
	CALL LCD_SET_CUR
	
	MOV AH,'S'
	CALL LCD_WRITE_CHAR
	MOV AH,'E'
	CALL LCD_WRITE_CHAR
	MOV AH,'L'
	CALL LCD_WRITE_CHAR
	MOV AH,'E'
	CALL LCD_WRITE_CHAR	
	MOV AH,'C'
	CALL LCD_WRITE_CHAR
	MOV AH,'T'
	CALL LCD_WRITE_CHAR
	MOV AH,' '
	CALL LCD_WRITE_CHAR
	MOV AH,'M'
	CALL LCD_WRITE_CHAR
	MOV AH,'O'
	CALL LCD_WRITE_CHAR	
	MOV AH,'D'
	CALL LCD_WRITE_CHAR
	MOV AH,'E'
	CALL LCD_WRITE_CHAR
;get key for the mode pressed
key_press2: 
    
	in al,04h
	cmp al,11110111b
	jz X_TRANSMODE
	cmp al,11101111b
	jz PROG_MODE
	JNZ key_press2
;PRINT TRANSACTION Y/N
X_TRANSMODE:
	CALL LCD_CLEAR
	
	MOV DL,1
	MOV DH,1
	CALL LCD_SET_CUR
	
	MOV AH,'T'
	CALL LCD_WRITE_CHAR
	MOV AH,'R'
	CALL LCD_WRITE_CHAR
	MOV AH,'A'
	CALL LCD_WRITE_CHAR
	MOV AH,'N'
	CALL LCD_WRITE_CHAR	
	MOV AH,'S'
	CALL LCD_WRITE_CHAR
	MOV AH,'A'
	CALL LCD_WRITE_CHAR
	MOV AH,'C'
	CALL LCD_WRITE_CHAR
	MOV AH,'T'
	CALL LCD_WRITE_CHAR
	MOV AH,'I'
	CALL LCD_WRITE_CHAR	
	MOV AH,'O'
	CALL LCD_WRITE_CHAR
	MOV AH,'N'
	CALL LCD_WRITE_CHAR	
	MOV AH,' '
	CALL LCD_WRITE_CHAR	
	MOV AH,'Y'
	CALL LCD_WRITE_CHAR
	MOV AH,'/'
	CALL LCD_WRITE_CHAR	
	MOV AH,'N'
	CALL LCD_WRITE_CHAR	
KEY_PRESS3:					
	;key pressed Y/N
	IN AL,02H
    CMP AL,10111111B
    JZ  X_PRESSMODE2   
	IN AL,02H
    CMP AL,10111111B
    JZ  X_PRESSMODE2
	IN AL, 02H
	CMP AL, 11111011b	;Y KEY 
	JZ X_ITEMCODE
	
	CMP AL,11110111B	;N KEY
	JZ X_PRESSMODE2
	jnz KEY_PRESS3
X_ITEMCODE:
	CALL LCD_CLEAR
	
	MOV DL,1
	MOV DH,1
	CALL LCD_SET_CUR
	
	MOV AH,'P'
	CALL LCD_WRITE_CHAR
	MOV AH,'R'
	CALL LCD_WRITE_CHAR
	MOV AH,'E'
	CALL LCD_WRITE_CHAR
	MOV AH,'S'
	CALL LCD_WRITE_CHAR	
	MOV AH,'S'
	CALL LCD_WRITE_CHAR	
	MOV AH,' '
	CALL LCD_WRITE_CHAR
	MOV AH,'I'
	CALL LCD_WRITE_CHAR
	MOV AH,'T'
	CALL LCD_WRITE_CHAR
	MOV AH,'E'
	CALL LCD_WRITE_CHAR
	MOV AH,'M'
	CALL LCD_WRITE_CHAR	
	MOV AH,' '
	CALL LCD_WRITE_CHAR
	MOV AH,'N'
	CALL LCD_WRITE_CHAR	
	MOV AH,'O'
	CALL LCD_WRITE_CHAR	
	MOV AH,'.'
	CALL LCD_WRITE_CHAR
;ITEM KEY PRESSED
	
KEY_8:
    IN AL,02H
    CMP AL,10111111B
    JZ  X_PRESSMODE2       
    mov PROG_ITEMCODE,00h
	IN AL, PORTB_ADDR
	CMP AL, 01111111B 		
	JZ ITEM_CODE
	; GET KEY
	jnz KEY_8
;ITEM CODE ENTERED
ITEM_CODE:
	CALL LCD_CLEAR
	
	MOV DL,1
	MOV DH,1
	CALL LCD_SET_CUR
	
	MOV AH,'E'
	CALL LCD_WRITE_CHAR
	MOV AH,'N'
	CALL LCD_WRITE_CHAR
	MOV AH,'T'
	CALL LCD_WRITE_CHAR
	MOV AH,'E'
	CALL LCD_WRITE_CHAR	
	MOV AH,'R'
	CALL LCD_WRITE_CHAR
	MOV AH,' '
	CALL LCD_WRITE_CHAR
	MOV AH,'I'
	CALL LCD_WRITE_CHAR
	MOV AH,'T'
	CALL LCD_WRITE_CHAR
	MOV AH,'E'
	CALL LCD_WRITE_CHAR	
	MOV AH,'M'
	CALL LCD_WRITE_CHAR
	MOV AH,' '
	CALL LCD_WRITE_CHAR	
	MOV AH,'N'
	CALL LCD_WRITE_CHAR	
	MOV AH,'O'
	CALL LCD_WRITE_CHAR
	MOV AH,'.'
	CALL LCD_WRITE_CHAR	
    JMP CHECK_NUM


    

BKSPT1:
    CALL LCD_CLEAR


CHECK_NUM:	
    IN AL,02H
    CMP AL,10111111B
    JZ  X_PRESSMODE2
    
	IN AL, PORTA_ADDR	;0
	MOV BL, '0'
	MOV BH,0H
	CMP AL, 11111110b
	JZ	HIT_KEYT
	
	IN AL, PORTA_ADDR	;1
	MOV BL, '1'
	MOV BH,1H
	CMP AL, 11111101b
	JZ	HIT_KEYT
	
	IN AL, PORTA_ADDR	;2
	MOV BL, '2'
	MOV BH,2H
	CMP AL, 11111011b
	JZ	HIT_KEYT
	
	IN AL, PORTA_ADDR	;3
	MOV BL, '3'
	MOV BH,3H
	CMP AL, 11110111b
	JZ	HIT_KEYT
	
	IN AL, PORTA_ADDR	;4
	MOV BL, '4'
	MOV BH,4H
	CMP AL, 11101111b
	JZ	HIT_KEYT
	
	IN AL, PORTA_ADDR	;5
	MOV BL, '5'
	MOV BH,5H
	CMP AL, 11011111b
	JZ	HIT_KEYT
	
	IN AL, PORTA_ADDR	;6
	MOV BL, '6'
	MOV BH,6H
	CMP AL, 10111111b
	JZ	HIT_KEYT
	
	IN AL, PORTA_ADDR	;7
	MOV BL, '7'
	MOV BH,7H
	CMP AL, 01111111b
	JZ	HIT_KEYT
	
	IN AL, PORTB_ADDR	;8
	MOV BL, '8'
	MOV BH,8H
	CMP AL, 11111110b
	JZ	HIT_KEYT
	
	IN AL, PORTB_ADDR	;9
	MOV BL, '9'
	MOV BH,9H
	CMP AL, 11111101b
	JZ	HIT_KEYT

	
	JMP CHECK_NUM

HIT_KEYT:
	MOV ITEMCODE_DIG1,BL
	MOV AL,0AH
	MUL BH
	MOV BH,AL
	MOV PROG_ITEMCODE,BH
	
HIT_KEYTBK:
    CALL LCD_CLEAR
    MOV DL,1
    MOV DH,1
    CALL LCD_SET_CUR
    MOV AH,ITEMCODE_DIG1
    CALL LCD_WRITE_CHAR
    MOV CX,65533
    CALL DELAY
CHECK_NUM2:
    IN AL,02H
    CMP AL,10111111B
    JZ  X_PRESSMODE2
    
    IN AL,02H
    CMP AL,11011111B
    JZ BKSPT1	
	
	IN AL, PORTA_ADDR	;0
	MOV BL, '0'      
	MOV BH,0H
	CMP AL, 11111110b
	JZ	HIT_KEY2T
	
	IN AL, PORTA_ADDR	;1
	MOV BL, '1'
	MOV BH,1H
	CMP AL, 11111101b
	JZ	HIT_KEY2T
	
	IN AL, PORTA_ADDR	;2
	MOV BL, '2'
	MOV BH,2H
	CMP AL, 11111011b
	JZ	HIT_KEY2T
	
	IN AL, PORTA_ADDR	;3
	MOV BL, '3'
	MOV BH,3H
	CMP AL, 11110111b
	JZ	HIT_KEY2T
	
	IN AL, PORTA_ADDR	;4
	MOV BL, '4'
	MOV BH,4H
	CMP AL, 11101111b
	JZ	HIT_KEY2T
	
	IN AL, PORTA_ADDR	;5
	MOV BL, '5'
	MOV BH,5H
	CMP AL, 11011111b
	JZ	HIT_KEY2T
	
	IN AL, PORTA_ADDR	;6
	MOV BL, '6'
	MOV BH,6H
	CMP AL, 10111111b
	JZ	HIT_KEY2T
	
	IN AL, PORTA_ADDR	;7
	MOV BL, '7'
	MOV BH,7H
	CMP AL, 01111111b
	JZ	HIT_KEY2T
	
	IN AL, PORTB_ADDR	;8
	MOV BL, '8'
	MOV BH,8H
	CMP AL, 11111110b
	JZ	HIT_KEY2T
	
	IN AL, PORTB_ADDR	;9
	MOV BL, '9'
	MOV BH,9H
	CMP AL, 11111101b
	JZ HIT_KEY2T
	JMP CHECK_NUM2
HIT_KEY2T:
	
	MOV ITEMCODE_DIG2,BL
	MOV TEMP,BH

	CALL LCD_CLEAR
	MOV DL,1
	MOV DH,1
	CALL LCD_SET_CUR
	MOV AH, ITEMCODE_DIG1
	CALL LCD_WRITE_CHAR
	MOV AH,ITEMCODE_DIG2
	CALL LCD_WRITE_CHAR
	                	
ENTTT:
    IN AL,02H
    CMP AL,10111111B
    JZ  X_PRESSMODE2	         

    IN AL,02H
    CMP AL,11011111B
    JZ HIT_KEYTBK 
    
    IN AL, PORTB_ADDR
	CMP AL, 11101111b 		;ENTER KEY PRESSED
	JNZ	ENTTT	
	MOV CH,TEMP
	ADD PROG_ITEMCODE,CH
	
	
	
	
	
	
	
X_QUANTITYKEY:
	CALL LCD_CLEAR
	MOV DL,1
	MOV DH,1
	CALL LCD_SET_CUR
	MOV AH,'P'
	CALL LCD_WRITE_CHAR
	MOV AH,'R'
	CALL LCD_WRITE_CHAR
	MOV AH,'E'
	CALL LCD_WRITE_CHAR
	MOV AH,'S'
	CALL LCD_WRITE_CHAR	
	MOV AH,'S'
	CALL LCD_WRITE_CHAR
	MOV AH,' '
	CALL LCD_WRITE_CHAR
	MOV AH,'Q'
	CALL LCD_WRITE_CHAR
	MOV AH,'U'
	CALL LCD_WRITE_CHAR
	MOV AH,'A'
	CALL LCD_WRITE_CHAR
	MOV AH,'N'
	CALL LCD_WRITE_CHAR	
	MOV AH,'T'
	CALL LCD_WRITE_CHAR
	MOV AH,'I'
	CALL LCD_WRITE_CHAR
	MOV AH,'T'
	CALL LCD_WRITE_CHAR
	MOV AH,'Y'
	CALL LCD_WRITE_CHAR

KEY_QUANTITY:  
    IN AL,02H
    CMP AL,10111111B
    JZ  X_PRESSMODE2
    
	in al,04h
	cmp al,11111110b
	JZ X_GETQUANTITY		;QUANTITY KEY
	jnz KEY_QUANTITY
		
X_GETQUANTITY:
    CALL LCD_CLEAR
	MOV DL,1
	MOV DH,1
	CALL LCD_SET_CUR 
    MOV AH,'Q'
	CALL LCD_WRITE_CHAR
	MOV AH,'U'
	CALL LCD_WRITE_CHAR
	MOV AH,'A'
	CALL LCD_WRITE_CHAR
	MOV AH,'N'
	CALL LCD_WRITE_CHAR	
	MOV AH,'T'
	CALL LCD_WRITE_CHAR
	MOV AH,'I'
	CALL LCD_WRITE_CHAR
	MOV AH,'T'
	CALL LCD_WRITE_CHAR
	MOV AH,'Y'
    CALL LCD_WRITE_CHAR
  

X_GETQUANTITYNUM:
    IN AL,02H
    CMP AL,10111111B
    JZ  X_PRESSMODE2

	IN AL, PORTA_ADDR	;0
	MOV BL, '0'
	CMP AL, 11111110b
	JZ	HIT_ENTER3
	
	IN AL, PORTA_ADDR	;1
	MOV BL, '1'
	CMP AL, 11111101b
	JZ	HIT_ENTER3
	
	IN AL, PORTA_ADDR	;2
	MOV BL, '2'
	CMP AL, 11111011b
	JZ	HIT_ENTER3
	
	IN AL, PORTA_ADDR	;3
	MOV BL, '3'
	CMP AL, 11110111b
	JZ	HIT_ENTER3
	
	IN AL, PORTA_ADDR	;4
	MOV BL, '4'
	CMP AL, 11101111b
	JZ	HIT_ENTER3
	
	
	
	IN AL, PORTA_ADDR	;6
	MOV BL, '6'
	CMP AL, 10111111b
	JZ	HIT_ENTER3
	
	IN AL, PORTA_ADDR	;7
	MOV BL, '7'
	CMP AL, 01111111b
	JZ	HIT_ENTER3
	
	IN AL, PORTB_ADDR	;8
	MOV BL, '8'
	CMP AL, 11111110b
	JZ	HIT_ENTER3
	IN AL, PORTA_ADDR	;5
	MOV BL, '5'
	CMP AL, 11011111b
	JZ	HIT_ENTER3
	
	IN AL, PORTB_ADDR	;9
	MOV BL, '9'
	CMP AL, 11111101b
	JZ HIT_ENTER3
	JNZ X_GETQUANTITYNUM

HIT_ENTER3:
    MOV QUANTITY_NUM,BL
	CALL LCD_CLEAR
	MOV DH,1
	MOV DL,1	
	CALL LCD_SET_CUR
	MOV AH, BL
	CALL LCD_WRITE_CHAR
	MOV TEMP,BL
KEY_4:
    IN AL,02H
    CMP AL,10111111B
    JZ  X_PRESSMODE2
    IN AL,02H
    CMP AL,11011111B
    JZ X_GETQUANTITY
    in al,02h
	CMP AL, 11101111b
	JZ	X_COST
	JMP KEY_4          
	
	
	
X_COST:
	CALL LCD_CLEAR
	MOV DL,1
	MOV DH,1
	CALL LCD_SET_CUR
	MOV AH,'C'
	CALL LCD_WRITE_CHAR
	MOV AH,'O'
	CALL LCD_WRITE_CHAR
	MOV AH,'S'
	CALL LCD_WRITE_CHAR	
	MOV AH,'T'
	CALL LCD_WRITE_CHAR
    MOV AH,':'
	CALL LCD_WRITE_CHAR
  
	
PSHOW:
    LEA SI,ITEMPRICE
    MOV BL,PROG_ITEMCODE
    MOV Bh,00H
    ADD SI,BX     
    MOV DX,[SI]
    MOV AH,DL
    AND DL,0FH
	MOV AL,QUANTITY_NUM
	AND AL,0FH
	MUL DL
	MOV TEMP,AL
	ADD TEMP1,AL 
	MOV DL,AL
	MOV AH,00
	MOV BL,0AH
    DIV BL
    MOV BL,06
    MUL BL
    ADD DL,AL
    MOV TEMP,DL
    MOV AL,DL 
    AND AL,11110000B
	MOV BH,10H
	DIV BH
	MOV BL,30H
	ADD AL,BL
	MOV AH,AL
	CALL LCD_WRITE_CHAR
	MOV AL,TEMP
	AND AL,00001111B
	MOV BL,30H
	ADD AL,BL
	MOV AH,AL
	CALL LCD_WRITE_CHAR 
TC_ITM:
    IN AL,02H
    CMP AL,10111111B
    JZ  X_PRESSMODE2  
    IN AL,04H
    CMP AL,11111101B 
    JZ TC
    
    IN AL,02H
    CMP AL,01111111B
    JZ X_ITEMCODE
    JNZ TC_ITM
    ;IF TC SHOW TOTAL COST
    ;IF ITEM NUMBER TAKE OTHER ITEM NUMBER AND ADD



TC:  
    CALL LCD_CLEAR
	MOV DL,1
	MOV DH,1 
	CALL LCD_SET_CUR
	MOV AH,'T'
	CALL LCD_WRITE_CHAR
	MOV AH,'O'
	CALL LCD_WRITE_CHAR
	MOV AH,'T'
	CALL LCD_WRITE_CHAR	
	MOV AH,'A'
	CALL LCD_WRITE_CHAR
    MOV AH,'L'
	CALL LCD_WRITE_CHAR
	MOV AH,' '
	CALL LCD_WRITE_CHAR
	MOV AH,'C'
	CALL LCD_WRITE_CHAR
	MOV AH,'O'
	CALL LCD_WRITE_CHAR
	MOV AH,'S'
	CALL LCD_WRITE_CHAR	
	MOV AH,'T'
	CALL LCD_WRITE_CHAR
    MOV AH,':'
	CALL LCD_WRITE_CHAR
	
	MOV AL,TEMP1
	MOV DL,AL
	MOV AH,00
	MOV BL,0AH
    DIV BL
    MOV BL,06
    MUL BL
    ADD DL,AL
    MOV TEMP,DL
    MOV AL,DL 
    AND AL,11110000B
	MOV BH,10H
	DIV BH
	MOV BL,30H
	ADD AL,BL
	MOV AH,AL
	CALL LCD_WRITE_CHAR
	MOV AL,TEMP
	AND AL,00001111B
	MOV BL,30H
	ADD AL,BL
	MOV AH,AL
	CALL LCD_WRITE_CHAR
    
    
    MOV CX,65342
    CALL DELAY
    
    
    MOV CX,65342
    CALL DELAY


    
    MOV CX,65342
    CALL DELAY

    
    MOV CX,65342
    CALL DELAY 
    
    MOV CX,65342
    CALL DELAY

    
    MOV CX,65342
    CALL DELAY
 
    JMP X_PRESSMODE2 
    


PROG_MODE: 

    MOV PROG_ITEMCODE,00
	CALL LCD_CLEAR
	
	MOV DL,1
	MOV DH,1
	CALL LCD_SET_CUR
	
	MOV AH,'P'
	CALL LCD_WRITE_CHAR
	MOV AH,'R'
	CALL LCD_WRITE_CHAR
	MOV AH,'O'
	CALL LCD_WRITE_CHAR
	MOV AH,'G'
	CALL LCD_WRITE_CHAR	
	MOV AH,'R'
	CALL LCD_WRITE_CHAR
	MOV AH,'A'
	CALL LCD_WRITE_CHAR
	MOV AH,'M'
	CALL LCD_WRITE_CHAR
	MOV AH,'_'
	CALL LCD_WRITE_CHAR
	MOV AH,'M'
	CALL LCD_WRITE_CHAR	
	MOV AH,'O'
	CALL LCD_WRITE_CHAR
	MOV AH,'D'
	CALL LCD_WRITE_CHAR	
	MOV AH,' '
	CALL LCD_WRITE_CHAR	
	MOV AH,'Y'
	CALL LCD_WRITE_CHAR
	MOV AH,'/'
	CALL LCD_WRITE_CHAR	
	MOV AH,'N'
	CALL LCD_WRITE_CHAR	
KEY_PRESS100:
   
    					;key pressed Y/N
	IN AL, 02H
	CMP AL, 11111011b	;Y KEY 
	JZ ITEM
	
	CMP AL,11110111B	;N KEY
	JZ X_PRESSMODE2
	jnz KEY_PRESS100
	
ITEM:

	CALL LCD_CLEAR
	
	MOV DL,1
	MOV DH,1
	CALL LCD_SET_CUR
	                     
	MOV AH,'A'
	CALL LCD_WRITE_CHAR
	MOV AH,'D'
	CALL LCD_WRITE_CHAR
	MOV AH,'D'
	CALL LCD_WRITE_CHAR
	MOV AH,' '
	CALL LCD_WRITE_CHAR	
	MOV AH,'O'
	CALL LCD_WRITE_CHAR
	MOV AH,'R'
	CALL LCD_WRITE_CHAR
	MOV AH,' '
	CALL LCD_WRITE_CHAR
	MOV AH,'D'
	CALL LCD_WRITE_CHAR
	MOV AH,'E'
	CALL LCD_WRITE_CHAR	
	MOV AH,'L'
	CALL LCD_WRITE_CHAR
	MOV AH,'E'
	CALL LCD_WRITE_CHAR	
	MOV AH,'T'
	CALL LCD_WRITE_CHAR	
	MOV AH,'E'
	CALL LCD_WRITE_CHAR
SELECT:

    IN AL,02H
    CMP AL,10111111B
    JZ  X_PRESSMODE2
    	
	IN AL, 04H
	CMP AL, 11011111b	;ADD KEY 
	JZ ADD_ITEM
	IN AL, 04H
	CMP AL, 10111111b	;DEL KEY 
	JZ DEL_ITEM
	JMP SELECT 
ADD_ITEM:
    CALL LCD_CLEAR
	
	MOV DL,1
	MOV DH,1
	CALL LCD_SET_CUR
	                     
	MOV AH,'E'
	CALL LCD_WRITE_CHAR
	MOV AH,'N'
	CALL LCD_WRITE_CHAR
	MOV AH,'T'
	CALL LCD_WRITE_CHAR
	MOV AH,'E'
	CALL LCD_WRITE_CHAR	
	MOV AH,'R'
	CALL LCD_WRITE_CHAR
	MOV AH,' '
	CALL LCD_WRITE_CHAR
	MOV AH,'I'
	CALL LCD_WRITE_CHAR	
	MOV AH,'T'
	CALL LCD_WRITE_CHAR	
	MOV AH,'E'
	CALL LCD_WRITE_CHAR
	MOV AH,'M'
	CALL LCD_WRITE_CHAR	
	MOV AH,' '
	CALL LCD_WRITE_CHAR
	MOV AH,'C'
	CALL LCD_WRITE_CHAR	
	MOV AH,'O'
	CALL LCD_WRITE_CHAR		
	MOV AH,'D'
	CALL LCD_WRITE_CHAR
	MOV AH,'E'
	CALL LCD_WRITE_CHAR
	JMP ADD_ITEM1
DEL_ITEM:
    CALL LCD_CLEAR
	
	MOV DL,1
	MOV DH,1
	CALL LCD_SET_CUR
	                     
	MOV AH,'E'
	CALL LCD_WRITE_CHAR
	MOV AH,'N'
	CALL LCD_WRITE_CHAR
	MOV AH,'T'
	CALL LCD_WRITE_CHAR
	MOV AH,'E'
	CALL LCD_WRITE_CHAR	
	MOV AH,'R'
	CALL LCD_WRITE_CHAR
	MOV AH,' '
	CALL LCD_WRITE_CHAR
	MOV AH,'I'
	CALL LCD_WRITE_CHAR	
	MOV AH,'T'
	CALL LCD_WRITE_CHAR	
	MOV AH,'E'
	CALL LCD_WRITE_CHAR
	MOV AH,'M'
	CALL LCD_WRITE_CHAR	
	MOV AH,' '
	CALL LCD_WRITE_CHAR
	MOV AH,'N'
	CALL LCD_WRITE_CHAR	
	MOV AH,'O'
	CALL LCD_WRITE_CHAR		
	MOV AH,'.'
	CALL LCD_WRITE_CHAR
	JMP DEL_ITEM1
	
	
	
	
BKSPD1:
    CALL LCD_CLEAR	
	
	
DEL_ITEM1:
	IN AL, PORTA_ADDR	;0
	MOV BL, '0'
	MOV BH,0H
	CMP AL, 11111110b
	JZ	HIT_KEYD
	
	IN AL, PORTA_ADDR	;1
	MOV BL, '1'
	MOV BH,1H
	CMP AL, 11111101b
	JZ	HIT_KEYD
	
	IN AL, PORTA_ADDR	;2
	MOV BL, '2'
	MOV BH,2H
	CMP AL, 11111011b
	JZ	HIT_KEYD
	
	IN AL, PORTA_ADDR	;3
	MOV BL, '3'
	MOV BH,3H
	CMP AL, 11110111b
	JZ	HIT_KEYD
	
	IN AL, PORTA_ADDR	;4
	MOV BL, '4'
	MOV BH,4H
	CMP AL, 11101111b
	JZ	HIT_KEYD
	
	IN AL, PORTA_ADDR	;5
	MOV BL, '5'
	MOV BH,5H
	CMP AL, 11011111b
	JZ	HIT_KEYD
	
	IN AL, PORTA_ADDR	;6
	MOV BL, '6'
	MOV BH,6H
	CMP AL, 10111111b
	JZ	HIT_KEYD
	
	IN AL, PORTA_ADDR	;7
	MOV BL, '7'
	MOV BH,7H
	CMP AL, 01111111b
	JZ	HIT_KEYD
	
	IN AL, PORTB_ADDR	;8
	MOV BL, '8'
	MOV BH,8H
	CMP AL, 11111110b
	JZ	HIT_KEYD
	
	IN AL, PORTB_ADDR	;9
	MOV BL, '9'
	MOV BH,9H
	CMP AL, 11111101b
	JZ	HIT_KEYD
	
	JMP DEL_ITEM1

HIT_KEYD:
	MOV ITEMCODE_DIG1,BL
	MOV AL,0AH
	MUL BH
	MOV BH,AL
	MOV PROG_ITEMCODE,BH
HIT_KEYDB:	
	CALL LCD_CLEAR
	MOV DL,1
	MOV DH,1
	CALL LCD_SET_CUR
	MOV AH, ITEMCODE_DIG1
	CALL LCD_WRITE_CHAR
	MOV CX,65534
	CALL DELAY
DEL_ITEM2:

    IN AL,02H
    CMP AL,10111111B
    JZ  X_PRESSMODE2
    
    IN AL,02H
    CMP AL,11011111B
    JZ BKSPD1	
	
	IN AL, PORTA_ADDR	;0
	MOV BL, '0'      
	MOV BH,0H
	CMP AL, 11111110b
	JZ	HIT_KEY2D
	
	IN AL, PORTA_ADDR	;1
	MOV BL, '1'
	MOV BH,1H
	CMP AL, 11111101b
	JZ	HIT_KEY2D
	
	IN AL, PORTA_ADDR	;2
	MOV BL, '2'
	MOV BH,2H
	CMP AL, 11111011b
	JZ	HIT_KEY2D
	
	IN AL, PORTA_ADDR	;3
	MOV BL, '3'
	MOV BH,3H
	CMP AL, 11110111b
	JZ	HIT_KEY2D
	
	IN AL, PORTA_ADDR	;4
	MOV BL, '4'
	MOV BH,4H
	CMP AL, 11101111b
	JZ	HIT_KEY2D
	
	IN AL, PORTA_ADDR	;5
	MOV BL, '5'
	MOV BH,5H
	CMP AL, 11011111b
	JZ	HIT_KEY2D
	
	IN AL, PORTA_ADDR	;6
	MOV BL, '6'
	MOV BH,6H
	CMP AL, 10111111b
	JZ	HIT_KEY2D
	
	IN AL, PORTA_ADDR	;7
	MOV BL, '7'
	MOV BH,7H
	CMP AL, 01111111b
	JZ	HIT_KEY2D
	           
	IN AL, PORTB_ADDR	;8
	MOV BL, '8'
	MOV BH,8H
	CMP AL, 11111110b
	JZ	HIT_KEY2D
	
	IN AL, PORTB_ADDR	;9
	MOV BL, '9'
	MOV BH,9H
	CMP AL, 11111101b
	JZ HIT_KEY2D
	JMP DEL_ITEM2
HIT_KEY2D:
	
	MOV ITEMCODE_DIG2,BL
	MOV TEMP,BH

	CALL LCD_CLEAR
	MOV DL,1
	MOV DH,1
	CALL LCD_SET_CUR
	MOV AH, ITEMCODE_DIG1
	CALL LCD_WRITE_CHAR
	MOV AH,ITEMCODE_DIG2
	CALL LCD_WRITE_CHAR
	MOV AH,PROG_ITEMCODE
	CALL LCD_WRITE_CHAR
	                
	                
	;press enter    
	
ENTD:
    IN AL,02H
    CMP AL,10111111B
    JZ  X_PRESSMODE2
    
    IN AL,02H
    CMP AL,11011111B
    JZ HIT_KEYDB
    	
    IN AL, PORTB_ADDR
	CMP AL, 11101111b 		;ENTER KEY PRESSED
	JNZ	ENTD     
	MOV CH,TEMP
	ADD PROG_ITEMCODE,CH
	

DEL_SHOW:

    
    CALL LCD_CLEAR
	MOV DL,1
	MOV DH,1
	CALL LCD_SET_CUR
    MOV AH,'D'
	CALL LCD_WRITE_CHAR
	MOV AH,'E'
	CALL LCD_WRITE_CHAR
	MOV AH,'L'
	CALL LCD_WRITE_CHAR
	MOV AH,'E'
	CALL LCD_WRITE_CHAR	
	MOV AH,'T'
	CALL LCD_WRITE_CHAR
	MOV AH,'E'
	CALL LCD_WRITE_CHAR
	MOV AH,' '
	CALL LCD_WRITE_CHAR
	MOV AH,'Y'
	CALL LCD_WRITE_CHAR
	MOV AH,'/'
	CALL LCD_WRITE_CHAR
	MOV AH,'N'
	CALL LCD_WRITE_CHAR	   	
	

USER_CONF: 
    IN AL,02H
    CMP AL,10111111B
    JZ  X_PRESSMODE2

    IN AL, 02H
	CMP AL, 11111011b	;Y KEY 
	JZ PRICE_DEL
	
	CMP AL,11110111B	;N KEY
	JZ X_PRESSMODE2
	jnz USER_CONF

    ;PRESS Y TO CONFIRM DELETE OR N TO CANCEL-> GO BACK TO SELECT MODE
         
            
            
PRICE_DEL:
    LEA SI,ITEMPRICE
    MOV BL,PROG_ITEMCODE
    MOV BH,00H
    ADD SI,BX     
    MOV [SI],0            
              
 
    CALL LCD_CLEAR
	MOV DL,1
	MOV DH,1
	CALL LCD_SET_CUR
    MOV AH,'D'
	CALL LCD_WRITE_CHAR
	MOV AH,'E'
	CALL LCD_WRITE_CHAR
	MOV AH,'L'
	CALL LCD_WRITE_CHAR
	MOV AH,'E'
	CALL LCD_WRITE_CHAR	
	MOV AH,'T'
	CALL LCD_WRITE_CHAR
	MOV AH,'E'
	CALL LCD_WRITE_CHAR
	MOV AH,'D'
	CALL LCD_WRITE_CHAR	
	MOV CX,60000
	CALL DELAY
	MOV CX,60000
	CALL DELAY
	JMP X_PRESSMODE2 
  
BKSPA: 
       CALL LCD_CLEAR            
    
ADD_ITEM1:
    
	IN AL, PORTA_ADDR	;0
	MOV BL, '0'
	MOV BH,0H
	CMP AL, 11111110b
	JZ	HIT_KEY
	
	IN AL, PORTA_ADDR	;1
	MOV BL, '1'
	MOV BH,1H
	CMP AL, 11111101b
	JZ	HIT_KEY
	
	IN AL, PORTA_ADDR	;2
	MOV BL, '2'
	MOV BH,2H
	CMP AL, 11111011b
	JZ	HIT_KEY
	
	IN AL, PORTA_ADDR	;3
	MOV BL, '3'
	MOV BH,3H
	CMP AL, 11110111b
	JZ	HIT_KEY
	
	IN AL, PORTA_ADDR	;4
	MOV BL, '4'
	MOV BH,4H
	CMP AL, 11101111b
	JZ	HIT_KEY
	
	IN AL, PORTA_ADDR	;5
	MOV BL, '5'
	MOV BH,5H
	CMP AL, 11011111b
	JZ	HIT_KEY
	
	IN AL, PORTA_ADDR	;6
	MOV BL, '6'
	MOV BH,6H
	CMP AL, 10111111b
	JZ	HIT_KEY
	
	IN AL, PORTA_ADDR	;7
	MOV BL, '7'
	MOV BH,7H
	CMP AL, 01111111b
	JZ	HIT_KEY
	
	IN AL, PORTB_ADDR	;8
	MOV BL, '8'
	MOV BH,8H
	CMP AL, 11111110b
	JZ	HIT_KEY
	
	IN AL, PORTB_ADDR	;9
	MOV BL, '9'
	MOV BH,9H
	CMP AL, 11111101b
	JZ	HIT_KEY
	
	JMP ADD_ITEM1

HIT_KEY:
	MOV ITEMCODE_DIG1,BL
	MOV AL,0AH
	MUL BH
	MOV BH,AL
	MOV PROG_ITEMCODE,BH
HIT_KEYAB:	
	CALL LCD_CLEAR
	MOV DL,1
	MOV DH,1
	CALL LCD_SET_CUR
	MOV AH, ITEMCODE_DIG1
	CALL LCD_WRITE_CHAR
	MOV CX,65534
	CALL DELAY
ADD_ITEM2:	          
	           
    IN AL,02H
    CMP AL,11011111B
    JZ BKSPA           
	           
	IN AL, PORTA_ADDR	;0
	MOV BL, '0'      
	MOV BH,0H
	CMP AL, 11111110b
	JZ	HIT_KEY2
	
	IN AL, PORTA_ADDR	;1
	MOV BL, '1'
	MOV BH,1H
	CMP AL, 11111101b
	JZ	HIT_KEY2
	
	IN AL, PORTA_ADDR	;2
	MOV BL, '2'
	MOV BH,2H
	CMP AL, 11111011b
	JZ	HIT_KEY2
	
	IN AL, PORTA_ADDR	;3
	MOV BL, '3'
	MOV BH,3H
	CMP AL, 11110111b
	JZ	HIT_KEY2
	
	IN AL, PORTA_ADDR	;4
	MOV BL, '4'
	MOV BH,4H
	CMP AL, 11101111b
	JZ	HIT_KEY2
	
	IN AL, PORTA_ADDR	;5
	MOV BL, '5'
	MOV BH,5H
	CMP AL, 11011111b
	JZ	HIT_KEY2
	
	IN AL, PORTA_ADDR	;6
	MOV BL, '6'
	MOV BH,6H
	CMP AL, 10111111b
	JZ	HIT_KEY2
	
	IN AL, PORTA_ADDR	;7
	MOV BL, '7'
	MOV BH,7H
	CMP AL, 01111111b
	JZ	HIT_KEY2
	
	IN AL, PORTB_ADDR	;8
	MOV BL, '8'
	MOV BH,8H
	CMP AL, 11111110b
	JZ	HIT_KEY2
	
	IN AL, PORTB_ADDR	;9
	MOV BL, '9'
	MOV BH,9H
	CMP AL, 11111101b
	JZ HIT_KEY2
	JMP ADD_ITEM2
HIT_KEY2:
	
	MOV ITEMCODE_DIG2,BL
	MOV TEMP,BH
	

	CALL LCD_CLEAR
	MOV DL,1
	MOV DH,1
	CALL LCD_SET_CUR
	MOV AH, ITEMCODE_DIG1
	CALL LCD_WRITE_CHAR
	MOV AH,ITEMCODE_DIG2
	CALL LCD_WRITE_CHAR
	                
	                
	;press enter    
	
ENT:
    IN AL,02H
    CMP AL,10111111B
    JZ  X_PRESSMODE2
    
    IN AL,02H
    CMP AL,11011111B
    JZ HIT_KEYAB
    	
    IN AL, PORTB_ADDR
	CMP AL, 11101111b 		;ENTER KEY PRESSED
	JNZ	ENT 
	MOV BH,TEMP
	ADD PROG_ITEMCODE,BH
ENT_P:
    CALL LCD_CLEAR
	
	MOV DL,1
	MOV DH,1
	CALL LCD_SET_CUR
	                 
	MOV AH,'E'
	CALL LCD_WRITE_CHAR
	MOV AH,'N'
	CALL LCD_WRITE_CHAR
	MOV AH,'T'
	CALL LCD_WRITE_CHAR
	MOV AH,'E'
	CALL LCD_WRITE_CHAR	
	MOV AH,'R'
	CALL LCD_WRITE_CHAR
	MOV AH,' '
	CALL LCD_WRITE_CHAR
	MOV AH,'P'
	CALL LCD_WRITE_CHAR	
	MOV AH,'R'
	CALL LCD_WRITE_CHAR	
	MOV AH,'I'
	CALL LCD_WRITE_CHAR
	MOV AH,'C'
	CALL LCD_WRITE_CHAR	
	MOV AH,'E'
	CALL LCD_WRITE_CHAR
	JMP ADD_PRICE
	;enter price 
BKSPPA:
    CALL LCD_CLEAR
ADD_PRICE:
	IN AL, PORTA_ADDR	;0
	MOV BL, '0'
	MOV BH,0H
	CMP AL, 11111110b
	JZ	HIT_PRICE
	
	IN AL, PORTA_ADDR	;1
	MOV BL, '1'
	MOV BH,1H
	CMP AL, 11111101b
	JZ	HIT_PRICE
	
	IN AL, PORTA_ADDR	;2
	MOV BL, '2'
	MOV BH,2H
	CMP AL, 11111011b
	JZ	HIT_PRICE
	
	IN AL, PORTA_ADDR	;3
	MOV BL, '3'
	MOV BH,3H
	CMP AL, 11110111b
	JZ	HIT_PRICE
	
	IN AL, PORTA_ADDR	;4
	MOV BL, '4'
	MOV BH,4H
	CMP AL, 11101111b
	JZ	HIT_PRICE
	
	IN AL, PORTA_ADDR	;5
	MOV BL, '5'
	MOV BH,5H
	CMP AL, 11011111b
	JZ	HIT_PRICE
	
	IN AL, PORTA_ADDR	;6
	MOV BL, '6'
	MOV BH,6H
	CMP AL, 10111111b
	JZ	HIT_PRICE
	
	IN AL, PORTA_ADDR	;7
	MOV BL, '7'
	MOV BH,7H
	CMP AL, 01111111b
	JZ	HIT_PRICE
	
	IN AL, PORTB_ADDR	;8
	MOV BL, '8'
	MOV BH,8H
	CMP AL, 11111110b
	JZ	HIT_PRICE
	
	IN AL, PORTB_ADDR	;9
	MOV BL, '9'
	MOV BH,9H
	CMP AL, 11111101b
	JZ	HIT_PRICE
	
	JMP ADD_PRICE

HIT_PRICE:
	MOV ITEMCODE_DIG1,BL
	MOV PROG_ITEMPRICE,BL
	CALL LCD_CLEAR
	MOV DL,1
	MOV DH,1
	CALL LCD_SET_CUR
	MOV AH, ITEMCODE_DIG1
	CALL LCD_WRITE_CHAR
	                
	                
	;press enter    
	
ENT2:
    IN AL,02H
    CMP AL,10111111B
    JZ  X_PRESSMODE2	 

    IN AL,02H
    CMP AL,11011111B
    JZ BKSPPA

    
    IN AL, PORTB_ADDR
	CMP AL, 11101111b 		;ENTER KEY PRESSED
	JNZ	ENT2

	;entry added                
KEY_STR:
    LEA SI,ITEMPRICE
    MOV BL,PROG_ITEMCODE
    MOV bh,00H
    ADD SI,BX
    MOV BL,PROG_ITEMPRICE
    MOV DX,BX     
    MOV [SI],DX
    CALL LCD_CLEAR
	MOV DL,1
	MOV DH,1
	CALL LCD_SET_CUR
    MOV AH,'E'
	CALL LCD_WRITE_CHAR
	MOV AH,'N'
	CALL LCD_WRITE_CHAR
	MOV AH,'T'
	CALL LCD_WRITE_CHAR
	MOV AH,'R'
	CALL LCD_WRITE_CHAR	
	MOV AH,'Y'
	CALL LCD_WRITE_CHAR
	MOV AH,' '
	CALL LCD_WRITE_CHAR
	MOV AH,'A'
	CALL LCD_WRITE_CHAR	
	MOV AH,'D'
	CALL LCD_WRITE_CHAR	
	MOV AH,'D'
	CALL LCD_WRITE_CHAR
	MOV AH,'E'
	CALL LCD_WRITE_CHAR	
	MOV AH,'D'
	CALL LCD_WRITE_CHAR
	MOV CX,60000
	CALL DELAY
	MOV CX,60000
	CALL DELAY
	JMP X_PRESSMODE2 
    ;GO TO SI+BX AND STORE ITEM PRICE THERE

    	                     
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SUBROUTINES


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	
	
	
	
	
	
	
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;                                    ;
;		LCD function library.        ;
;                                    ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
PROC DELAY
;input: CX, this value controls the delay. CX=50 means 1ms
;output: none
	JCXZ @DELAY_END
	@DEL_LOOP:
	LOOP @DEL_LOOP	
	@DELAY_END:
	RET
ENDP DELAY



; LCD initialization
PROC LCD_INIT
;input: none
;output: none

;make RS=En=RW=0
	MOV AL,0
	CALL OUT_B
;delay 20ms
	MOV CX,1000
	CALL DELAY
;reset sequence
	MOV AH,30H
	CALL LCD_CMD
	MOV CX,250
	CALL DELAY
	
	MOV AH,30H
	CALL LCD_CMD
	MOV CX,50
	CALL DELAY
	
	MOV AH,30H
	CALL LCD_CMD
	MOV CX,500
	CALL DELAY
	
;function set
	MOV AH,38H
	CALL LCD_CMD
	
	MOV AH,0CH
	CALL LCD_CMD
	
	MOV AH,01H
	CALL LCD_CMD
	
	MOV AH,06H
	CALL LCD_CMD
	
	RET	
ENDP LCD_INIT




;sends commands to LCD
PROC LCD_CMD
;input: AH = command code
;output: none

;save registers
	PUSH DX
	PUSH AX
;make rs=0
	MOV AL,PORTB_VAL
	AND AL,0FDH		;En-RS-RW
	CALL OUT_B
;set out data pins
	MOV AL,AH
	CALL OUT_A
;make En=1
	MOV AL,PORTB_VAL
	OR	AL,100B		;En-RS-RW
	CALL OUT_B
;delay 1ms
	MOV CX,50
	CALL DELAY
;make En=0
	MOV AL,PORTB_VAL
	AND AL,0FBH		;En-RS-RW
	CALL OUT_B
;delay 1ms
	MOV CX,50
	CALL DELAY
;restore registers
	POP AX
	POP DX	
	RET
ENDP LCD_CMD




PROC LCD_CLEAR
	MOV AH,1
	CALL LCD_CMD
	RET	
ENDP LCD_CLEAR



;writes a character on current cursor position
PROC LCD_WRITE_CHAR
;input: AH
;output: none

;save registers
	PUSH AX
;set RS=1
	MOV AL,PORTB_VAL
	OR	AL,10B		;EN-RS-RW
	CALL OUT_B
;set out the data pins
	MOV AL,AH
	CALL OUT_A
;set En=1
	MOV AL,PORTB_VAL
	OR	AL,100B		;EN-RS-RW
	CALL OUT_B
;delay 1ms
	MOV CX,50
	CALL DELAY
;set En=0
	MOV AL,PORTB_VAL
	AND	AL,0FBH		;EN-RS-RW
	CALL OUT_B
;return
	POP AX
	RET	
ENDP LCD_WRITE_CHAR



;sets the cursor
PROC LCD_SET_CUR
;input: DL=ROW, DH=COL
;		DL = 1, means upper row
;		DL = 2, means lower row
;		DH = 1-8, 1st column is 1
;output: none

;save registers
	PUSH AX
;LCD uses 0 based column index
	DEC DH
;select case	
	CMP DL,1
	JE	@ROW1
	CMP DL,2
	JE	@ROW2
	JMP @LCD_SET_CUR_END
	
;if DL==1 then
	@ROW1:
		MOV AH,80H
	JMP @LCD_SET_CUR_ENDCASE
	
;if DL==2 then
	@ROW2:
		MOV AH,0C0H
	JMP @LCD_SET_CUR_ENDCASE
		
;execute the command
	@LCD_SET_CUR_ENDCASE:	
	ADD AH,DH
	CALL LCD_CMD
	
;exit from procedure
	@LCD_SET_CUR_END:
	POP AX
	RET
ENDP LCD_SET_CUR





PROC LCD_SHOW_CUR
;input: none
;output: none
	PUSH AX
	MOV AH,0FH
	CALL LCD_CMD
	POP AX
	RET
ENDP LCD_SHOW_CUR




PROC LCD_HIDE_CUR
;input: none
;output: none
	PUSH AX
	MOV AH,0CH
	CALL LCD_CMD
	POP AX
	RET
ENDP LCD_HIDE_CUR



;sends data to output port and saves them in a variable
PROC OUT_A
;input: AL
;output: PORTA_VAL
	PUSH DX
	MOV DX,PORTA
	OUT DX,AL
	MOV PORTA_VAL,AL
	POP DX
	RET	
ENDP OUT_A

HEX2DEC PROC NEAR
    MOV CX,0
    MOV BX,10
   
LOOP1: MOV DX,0
       DIV BX
       ADD DL,30H
       PUSH DX
       INC CX
       CMP AX,9
       JG LOOP1
     
       ADD AL,30H
       MOV [SI],AL
     
LOOP2: POP AX
       INC SI
       MOV [SI],AL
       LOOP LOOP2
       RET
HEX2DEC ENDP 

PROC OUT_B
;input: AL
;output: PORTB_VAL	
	PUSH DX
	MOV DX,PORTB
	OUT DX,AL
	MOV PORTB_VAL,AL
	POP DX
	RET
ENDP OUT_B

PROC OUT_C
;input: AL
;output: PORTC_VAL	
	PUSH DX
	MOV DX,PORTC
	OUT DX,AL
	MOV PORTC_VAL,AL
	POP DX
	RET
ENDP OUT_C
PROC TIME

		MOV DX,16H
		MOV AL,00110110B
		OUT DX,AL

		MOV AL,01110110B
		OUT DX,AL

		MOV AL,10110110B
		OUT DX,AL

		MOV DX,10H
		MOV Al,98h
		OUT DX,AL
		MOV Al,3Ah
		OUT DX,AL

		MOV DX,12H
		MOV Al,0AH
		OUT DX,AL
		MOV Al,0FH
		OUT DX,AL

		MOV DX,14H
		MOV Al,0F4h
		OUT DX,AL
		MOV Al,01h
		OUT DX,AL

		RET
TIME ENDP